{"id":"s8zH","dependencies":[{"name":"./index.js","dynamic":true,"resolved":"C:\\Users\\O\\Desktop\\Projects\\Totaled\\index.js","parent":"C:\\Users\\O\\Desktop\\Projects\\Totaled\\index.html"},{"name":"C:\\Users\\O\\Desktop\\Projects\\Totaled\\package.json","includedInParent":true,"mtime":1597226340838}],"generated":{"html":"<!DOCTYPE html><html lang=\"en\"><head><style>body{padding:0;margin:0;width:100vw;height:100vh}body,html{overflow-x:hidden}</style><meta charset=\"UTF-8\"><link href=\"https://fonts.googleapis.com/css2?family=Rochester&display=swap\" rel=\"stylesheet\"><link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@200;300;400;500;700;900&display=swap\" rel=\"stylesheet\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Totaled</title></head><body> <the-header></the-header> <main-container></main-container> </body><script>function r(r){return(t=r.split(\"-\")[0]).charAt(0).toUpperCase()+t.slice(1);var t}</script><script src=\"https://www.unpkg.com/dom-to-image@2.6.0/src/dom-to-image.js\"></script><script class=\"dontHost\" src=\"http://source.app.localhost:8080/\"></script><script class=\"dontHost\">async function e(){let e=await U.query({$count:{on:\"pages\",where:{city:\"$put.city\",fullName:\"$put.fullName\"}}});return`${put.fullName.replace(\" \",\"-\")}-${put.city}-${e}`}U.cloudFunctions.like=(async()=>{let e=arg.contentId;if((await U.query({$find:{on:\"actions\",where:{contentId:e}}}))[0])return await U.query({$delete:{on:\"actions\",where:{contentId:e}}}),\"unClicked\";{let t=await U.query({$write:{on:\"actions\",put:{type:arg.type,contentId:e}}});return t.error?t:\"clicked\"}}),U.cloudFunctions.sendRecommendation=(async e=>{let t=[];if(!e){let e=await U.query({$find:{on:\"actions\",where:{type:\"pages\",sender:\"$user.id\"}}});e=e.map(e=>e.contentId);let a=await U.query({$find:{on:\"memes\",where:{pageTitle:{$in:e}},limit:3}});t=a}let a=await U.query({$find:{on:\"actions\",where:{type:\"memes\",sender:\"$user.id\",limit:5}}});a=a.map(e=>e.contentId);let r=await U.query({$find:{on:\"actions\",where:{type:\"memes\",contentId:{$in:a},limit:2}}});r=r.map(e=>e.sender),e||(e=0);let n=30*e;return recommededMemes=await U.query({$find:{on:\"actions\",where:{type:\"memes\",sender:{$in:r},contentId:{$nin:a},limit:30,skip:n}}}),recommededMemes.map(e=>{t.push(e.contentId)}),t}),U.bucket.profileImages={updatable:!0,findable:!0,writable:!0},U.bucket.memeImages={updatable:!0,findable:!0,writable:!0},U.db.pages={schema:{title:{default:e,type:String,required:!0,unique:!0,updatable:!1},fullName:{type:String,required:!0},city:{type:String},DPlink:{type:String},description:{type:String,required:!0},type:String,instagramHandle:{type:String},author:{default:\"$user.id\",type:String,updatable:!1,findable:!1,writable:!1}},updatable:!0,findable:!0,writable:!0},U.db.bioInfo={schema:{pageTitle:{type:String,required:!0},field:{type:String,required:!0},contentType:{type:String,required:!0},value:{type:String,required:!0},author:{default:\"$user.id\",type:String,updatable:!1,findable:!1,writable:!1}},updatable:!0,findable:!0,writable:!0};let t=async()=>{let e={id:\"$put.contentId\"};\"pages\"==put.type&&(e={title:\"$put.contentId\"});let t=await U.query({$find:{on:\"$put.type\",where:e}});if(!t[0])throw Error(\"author not found\");return t[0].author};U.db.actions={schema:{contentId:{type:String,required:!0},type:{type:String,required:!0},sender:{default:\"$user.id\",type:String,required:!0,updatable:!1,findable:!1,writable:!1},receiver:{default:t,type:String,required:!0,findable:!1},createdAt:{type:Date,default:{$date:\"now\"}}},updatable:!0,findable:!0,writable:!0,onWrite:async()=>{if(console.log(\"now ranking\"),\"memes\"!==field.type)return;let e,t=await U.query({$find:{on:\"actions\",where:{type:\"memes\",contentId:field.contentId},sort:{by:\"createdAt\",order:\"descending\"}}});if(t.length>2){let a=await U.query({$find:{on:\"memes\",where:{id:\"$field.contentId\"}}}),r=1/(t[0].createdAt-t[1].createdAt);a[0]&&(r=a[0].rank*r),e=await U.query({$update:{on:\"memes\",where:{id:\"$field.contentId\"},put:{rank:r}}})}else e=await U.query({$update:{on:\"memes\",where:{id:\"$field.contentId\"},put:{rank:1}}});return e}},U.db.memes={schema:{pageTitle:{type:String,required:!0},imageLink:{type:String,required:!0},overlays:{type:Array,required:!0},author:{default:\"$user.id\",type:String,updatable:!1,findable:!1,writable:!1},createdAt:{type:Date,default:{$date:\"now\"},required:!0,updatable:!1,findable:!1,writable:!1},rank:{type:Number,updatable:!1,writable:!1}},updatable:!1,findable:!0,writable:!0},U.db.buttons={schema:{pageTitle:{type:String,required:!0},buttonText:{type:String,required:!0},contentType:{type:String,required:!0},author:{default:\"$user.id\",type:String,updatable:!1,findable:!1,writable:!1}},updatable:!1,findable:!0,writable:!0},U.uploadStaticFiles([\"addContentComponents/addBio.js\",\"addContentComponents/addButton.js\",\"addContentComponents/addMeme.js\",\"images/header/logo.svg\",\"images/header/flame.svg\",\"aButton.js\",\"addContent.js\",\"addContentHeader.js\",\"aMeme.js\",\"aPage.js\",\"aSearch.js\",\"createPage.js\",\"header.js\",\"listOfMemes.js\",\"mainContainer.js\",\"profileContent.js\",\"renderMeme.js\",\"Ronchester-Regular.ttf\",\"routal.js\",\"userPages.js\"]),U.run(\"Totaled\",{local:!0,loginBeforeEntry:!1,host:!1});</script><script src=\"/168726dbe96b3ce427e7fedce31bb0bc.js\"> </script></html>"},"sourceMaps":null,"error":null,"hash":"e0d2d042ed9369944309b685c0ed1328","cacheData":{"env":{}}}